msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2017-10-30 15:10+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"section: home\n"
"layout: default\n"
"---"
msgstr ""

msgid ""
"<div class=\"hfeed\">\n"
"  <div class=\"hentry post no-border\">\n"
"    <img src=\"/images/contents/home-code.png\" alt=\"Elixir Sample\" class=\"archi"
"ve-thumbnail\" />"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Elixir is a dynamic, functional language designed for building scalab"
"le and maintainable applications.</p>"
msgstr ""
"    <div class=\"entry-summary\">\n"
"      <p>Elixirは拡張性と保守性の高いアプリケーションを構築するためにデザインされた、動的で関数型のプログラミング言語です。</p>"

msgid ""
"      <p>Elixir leverages the Erlang VM, known for running low-latency, distri"
"buted and fault-tolerant systems, while also being successfully used in web de"
"velopment and the embedded software domain.</p>"
msgstr ""
"      <p>Elixirは、低レイテンシで分散型のフォールトトレラントシステムや、Webや組み込みシステムの領域で成功を収めている、Erlang VM"
"を利用します。</p>"

msgid ""
"      <p>To learn more about Elixir, check our <a href=\"/getting-started/intro"
"duction.html\">getting started guide</a> and our <a href=\"/learning.html\">learn"
"ing page for other resources</a>. Or keep reading to get an overview of the pl"
"atform, language and tools.</p>\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h3>Platform features</h3>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Scalability</h4>\n"
"    <div class=\"entry-summary\">"
msgstr ""

msgid ""
"      <p>All Elixir code runs inside lightweight threads of execution (called "
"processes) that are isolated and exchange information via messages:</p>"
msgstr ""

msgid ""
"{% highlight elixir %}\n"
"current_process = self()"
msgstr ""

msgid ""
"# Spawn an Elixir process (not an operating system one!)\n"
"spawn_link(fn ->\n"
"  send current_process, {:msg, \"hello world\"}\n"
"end)"
msgstr ""

msgid ""
"# Block until the message is received\n"
"receive do\n"
"  {:msg, contents} -> IO.puts contents\n"
"end\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>Due to their lightweight nature, it is not uncommon to have hundreds "
"of thousands of processes running <i>concurrently</i> in the same machine. Iso"
"lation allows processes to be garbage collected independently, reducing system"
"-wide pauses, and using all machine resources as efficiently as possible (vert"
"ical scaling).</p>"
msgstr ""

msgid ""
"      <p>Processes are also able to communicate with other processes running o"
"n different machines in the same network. This provides the foundation for dis"
"tribution, allowing developers to coordinate work across multiple nodes (horiz"
"ontal scaling).</p>\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Fault-tolerance</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>The unavoidable truth about software running in production is that <i"
">things will go wrong</i>. Even more when we take network, file systems, and o"
"ther third-party resources into account.</p>"
msgstr ""

msgid ""
"      <p>To cope with failures, Elixir provides supervisors which describe how"
" to restart parts of your system when things go awry, going back to a known in"
"itial state that is guaranteed to work:</p>"
msgstr ""

msgid ""
"{% highlight elixir %}\n"
"children = [\n"
"  TCP.Pool,\n"
"  {TCP.Acceptor, port: 4040}\n"
"]"
msgstr ""

msgid ""
"Supervisor.start_link(children, strategy: :one_for_one)\n"
"{% endhighlight %}\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h3>Language features</h3>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Functional programming</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Functional programming promotes a coding style that helps developers "
"write code that is short, fast, and maintainable. For example, pattern matchin"
"g allows developers to easily destructure data and access its contents:</p>"
msgstr ""

msgid ""
"{% highlight elixir %}\n"
"%User{name: name, age: age} = User.get(\"John Doe\")\n"
"name #=> \"John Doe\"\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>When mixed with guards, pattern matching allows us to elegantly match"
" and assert specific conditions for some code to execute:</p>"
msgstr ""

msgid ""
"{% highlight elixir %}\n"
"def serve_drinks(%User{age: age}) when age >= 21 do\n"
"  # Code that serves drinks!\n"
"end"
msgstr ""

msgid ""
"serve_drinks User.get(\"John Doe\")\n"
"#=> Fails if the user is under 21\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>Elixir relies heavily on those features to ensure your software is wo"
"rking under the expected constraints. And when it is not, don&rsquo;t worry, s"
"upervisors have your back!</p>\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Extensibility and DSLs</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Elixir has been designed to be extensible, letting developers natural"
"ly extend the language to particular domains, in order to increase their produ"
"ctivity.</p>"
msgstr ""

msgid ""
"      <p>As an example, let&rsquo;s write a simple test case using <a href=\"ht"
"tps://hexdocs.pm/ex_unit/\">Elixir&rsquo;s test framework called ExUnit</a>:</p"
">"
msgstr ""

msgid ""
"{% highlight elixir %}\n"
"defmodule MathTest do\n"
"  use ExUnit.Case, async: true"
msgstr ""

msgid ""
"  test \"can add two numbers\" do\n"
"    assert 1 + 1 == 2\n"
"  end\n"
"end\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>The <code>async: true</code> option allows <code>test</code>s to run "
"in parallel, using as many CPU cores as possible, while the <code>assert</code"
"> functionality can introspect your code, providing great reports in case of f"
"ailures. Those features are built using Elixir macros, making it possible to a"
"dd new constructs as if they were part of the language itself.</p>\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h3>Tooling features</h3>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>A growing ecosystem</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Elixir ships with a great set of tools to ease development. <a href=\""
"https://hexdocs.pm/mix/\">Mix is a build tool</a> that allows you to easily cre"
"ate projects, manage tasks, run tests and more:</p>"
msgstr ""

msgid ""
"{% highlight text %}\n"
"$ mix new my_app\n"
"$ cd my_app\n"
"$ mix test\n"
"."
msgstr ""

msgid ""
"Finished in 0.04 seconds (0.04s on load, 0.00s on tests)\n"
"1 tests, 0 failures\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>Mix is also able to manage dependencies and integrates nicely with th"
"e <a href=\"https://hex.pm/\">Hex package manager</a>, which provides dependency"
" resolution and the ability to remotely fetch packages.</p>\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Interactive development</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Tools like <a href=\"https://hexdocs.pm/iex/\">IEx (Elixir&rsquo;s inte"
"ractive shell)</a> are able to leverage many aspects of the language and platf"
"orm to provide auto-complete, debugging tools, code reloading, as well as nice"
"ly formatted documentation:</p>"
msgstr ""

msgid ""
"{% highlight text %}\n"
"$ iex\n"
"Interactive Elixir - press Ctrl+C to exit (type h() ENTER for help)\n"
"iex> h String.trim           # Prints the documentation for function\n"
"iex> i \"Hello, World\"        # Prints information about the given data type\n"
"iex> break! String.trim/1    # Sets a breakpoint in the String.trim/1 function"
"\n"
"iex> recompile               # Recompiles the current project on the fly\n"
"{% endhighlight %}\n"
"    </div>\n"
"  </div>"
msgstr ""

msgid ""
"  <div class=\"hentry post\">\n"
"    <h4>Erlang compatible</h4>"
msgstr ""

msgid ""
"    <div class=\"entry-summary\">\n"
"      <p>Elixir runs on the Erlang VM giving developers complete access to Erl"
"ang&rsquo;s ecosystem, used by companies like <a href=\"https://www.heroku.com\""
">Heroku</a>, <a href=\"https://www.whatsapp.com\">WhatsApp</a>, <a href=\"https:/"
"/klarna.com\">Klarna</a> and many more to build distributed, fault-tolerant app"
"lications. An Elixir programmer can invoke any Erlang function with no runtime"
" cost:</p>"
msgstr ""

msgid ""
"{% highlight iex %}\n"
"iex> :crypto.hash(:md5, \"Using crypto from Erlang OTP\")\n"
"<<192, 223, 75, 115, ...>>\n"
"{% endhighlight %}"
msgstr ""

msgid ""
"      <p>To learn more about Elixir, check our <a href=\"/getting-started/intro"
"duction.html\">getting started guide</a>. We also have <a href=\"/docs.html\">onl"
"ine documentation available</a> and a <a href=\"/crash-course.html\">Crash Cours"
"e for Erlang developers</a>.</p>\n"
"    </div>\n"
"  </div>\n"
"</div>"
msgstr ""
