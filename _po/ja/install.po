msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2017-10-30 15:10+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Installing Elixir\"\n"
"section: install\n"
"layout: default\n"
"---\n"
"{% assign stable = site.data.elixir-versions[site.data.elixir-versions.stable]"
" %}"
msgstr ""

msgid "# {{ page.title }}"
msgstr ""

msgid "{% include toc.html %}"
msgstr ""

msgid ""
"The quickest way to install Elixir is through a distribution or using one of t"
"he available installers. If not available, then we recommend the precompiled p"
"ackages or compiling it."
msgstr ""

msgid ""
"Note Elixir requires Erlang 18.0 or later. Many of the instructions below will"
" automatically install Erlang for you. In case they do not, read the \"Installi"
"ng Erlang\" section below."
msgstr ""

msgid "## Distributions"
msgstr ""

msgid ""
"The preferred option for installing Elixir. Choose your operating system and t"
"ool."
msgstr ""

msgid ""
"If your distribution contains an old Elixir/Erlang version, see the sections b"
"elow for installing Elixir/Erlang from version managers or from source."
msgstr ""

msgid "### Mac OS X"
msgstr ""

msgid ""
"  * Homebrew\n"
"    * Update your homebrew to latest: `brew update`\n"
"    * Run: `brew install elixir`\n"
"  * Macports\n"
"    * Run: `sudo port install elixir`"
msgstr ""

msgid "### Unix (and Unix-like)"
msgstr ""

msgid ""
"  * Arch Linux (Community repo)\n"
"    * Run: `pacman -S elixir`\n"
"  * openSUSE (and SLES 11 SP3+)\n"
"    * Add Erlang devel repo: `zypper ar -f http://download.opensuse.org/reposi"
"tories/devel:/languages:/erlang/openSUSE_Factory/ erlang`\n"
"    * Run: `zypper in elixir`\n"
"  * Gentoo\n"
"    * Run: `emerge --ask dev-lang/elixir`\n"
"  * GNU Guix\n"
"    * Run: `guix package -i elixir`\n"
"  * Fedora 21 (and older)\n"
"    * Run: `yum install elixir`\n"
"  * Fedora 22 (and newer)\n"
"    * Run `dnf install elixir`\n"
"  * FreeBSD\n"
"    * From ports: `cd /usr/ports/lang/elixir && make install clean`\n"
"    * From pkg: `pkg install elixir`\n"
"  * Solus\n"
"    * Run: `eopkg install elixir`\n"
"  * Ubuntu 14.04/16.04/16.10/17.04 or Debian 7/8/9\n"
"    * Add Erlang Solutions repo: `wget https://packages.erlang-solutions.com/e"
"rlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb`\n"
"    * Run: `sudo apt-get update`\n"
"    * Install the Erlang/OTP platform and all of its applications: `sudo apt-g"
"et install esl-erlang`\n"
"    * Install Elixir: `sudo apt-get install elixir`"
msgstr ""

msgid "### Windows"
msgstr ""

msgid ""
"  * Web installer\n"
"    * [Download the installer](https://repo.hex.pm/elixir-websetup.exe)\n"
"    * Click next, next, ..., finish\n"
"  * Chocolatey\n"
"    * `cinst elixir`"
msgstr ""

msgid "### Raspberry Pi"
msgstr ""

msgid "If necessary replace \"jessie\" with the name of your Raspian release."
msgstr ""

msgid ""
"  * The Erlang Solutions repository has a prebuilt package for armhf. This sav"
"es significant time instead of recompiling natively\n"
"  * Get Erlang key\n"
"    * `echo \"deb http://packages.erlang-solutions.com/debian jessie contrib\" |"
" sudo tee /etc/apt/sources.list.d/erlang-solutions.list`\n"
"    * Run: `wget http://packages.erlang-solutions.com/debian/erlang_solutions."
"asc`\n"
"    * Add to keychain: `sudo apt-key add erlang_solutions.asc`\n"
"  * Install Elixir\n"
"    * Update apt to latest: `sudo apt update`\n"
"    * Run: `sudo apt install elixir`"
msgstr ""

msgid "### Docker"
msgstr ""

msgid ""
"If you are familiar with Docker you can use the official Docker image to get s"
"tarted quickly with Elixir."
msgstr ""

msgid ""
"  * Enter interactive mode\n"
"    * Run: `docker run -it --rm elixir`\n"
"  * Enter bash within container with installed `elixir`\n"
"    * Run: `docker run -it --rm elixir bash`"
msgstr ""

msgid ""
"Those distributions will likely install Erlang automatically for you too. In c"
"ase they don't, check the [Installing Erlang](/install.html#installing-erlang)"
" section below."
msgstr ""

msgid "### Nanobox"
msgstr ""

msgid ""
"For developers using [Nanobox](https://nanobox.io), simply specify the `elixir"
"` engine in your `boxfile.yml` and `nanobox run`."
msgstr ""

msgid ""
"```yaml\n"
"run.config:\n"
"  engine: elixir\n"
"```"
msgstr ""

msgid "## Precompiled package"
msgstr ""

msgid ""
"Elixir provides a precompiled package for every release. First [install Erlang"
"](/install.html#installing-erlang) and then download and unzip the [Precompile"
"d.zip file for the latest release](https://github.com/elixir-lang/elixir/relea"
"ses/download/v{{ stable.version }}/Precompiled.zip)."
msgstr ""

msgid ""
"Once the release is unpacked, you are ready to run the `elixir` and `iex` comm"
"ands from the `bin` directory, but we recommend you to [add Elixir's bin path "
"to your PATH environment variable](#setting-path-environment-variable) to ease"
" development."
msgstr ""

msgid "## Compiling with version managers"
msgstr ""

msgid ""
"There are many tools that allow developers to install and manage multiple Erla"
"ng and Elixir versions. They are useful if you can't install Erlang or Elixir "
"as mentioned above or if your package manager is simply outdated. Here are som"
"e of those tools:"
msgstr ""

msgid ""
"  * [asdf](https://github.com/asdf-vm/asdf) - install and manage different Eli"
"xir and Erlang versions\n"
"  * [exenv](https://github.com/mururu/exenv) - install and manage different El"
"ixir versions\n"
"  * [kiex](https://github.com/taylor/kiex) - install and manage different Elix"
"ir versions\n"
"  * [kerl](https://github.com/yrashk/kerl) - install and manage different Erla"
"ng versions"
msgstr ""

msgid ""
"If you would prefer to compile from source manually, don't worry, we got your "
"back too!"
msgstr ""

msgid "## Compiling from source (Unix and MinGW)"
msgstr ""

msgid ""
"You can download and compile Elixir in few steps. The first one is to [install"
" Erlang](/install.html#installing-erlang)."
msgstr ""

msgid ""
"Next you should download source code ([.zip](https://github.com/elixir-lang/el"
"ixir/archive/v{{ stable.version }}.zip), [.tar.gz](https://github.com/elixir-l"
"ang/elixir/archive/v{{ stable.version }}.tar.gz)) of the [latest release](http"
"s://github.com/elixir-lang/elixir/releases/tag/v{{ stable.version }}), unpack "
"it and then run `make` inside the unpacked directory (note: if you are running"
" on Windows, [read this page on setting up your environment for compiling Elix"
"ir](https://github.com/elixir-lang/elixir/wiki/Windows))."
msgstr ""

msgid ""
"After compiling, you are ready to run the elixir and `iex` commands from the b"
"in directory. It is recommended that you [add Elixir's bin path to your PATH e"
"nvironment variable](#setting-path-environment-variable) to ease development."
msgstr ""

msgid ""
"In case you are feeling a bit more adventurous, you can also compile from mast"
"er:"
msgstr ""

msgid ""
"```bash\n"
"$ git clone https://github.com/elixir-lang/elixir.git\n"
"$ cd elixir\n"
"$ make clean test\n"
"```"
msgstr ""

msgid ""
"If the tests pass, you are ready to go. Otherwise, feel free to open an issue "
"[in the issues tracker on Github](https://github.com/elixir-lang/elixir)."
msgstr ""

msgid "## Installing Erlang"
msgstr ""

msgid ""
"The only prerequisite for Elixir is Erlang, version 18.0 or later, which can b"
"e easily installed with [Precompiled packages](https://www.erlang-solutions.co"
"m/resources/download.html). In case you want to install it directly from sourc"
"e, it can be found on [the Erlang website](http://www.erlang.org/download.html"
") or by following the excellent tutorial available in the [Riak documentation]"
"(https://docs.basho.com/riak/latest/ops/building/installing/erlang/)."
msgstr ""

msgid ""
"For Windows developers, we recommend the precompiled packages. Those on a Unix"
" platform can probably get Erlang installed via one of the many package distri"
"bution tools."
msgstr ""

msgid ""
"After Erlang is installed, you should be able to open up the command line (or "
"command prompt) and check the Erlang version by typing `erl`. You will see som"
"e information as follows:"
msgstr ""

msgid ""
"    Erlang/OTP 18 (erts-7) [64-bit] [smp:2:2] [async-threads:0] [hipe] [kernel"
"-poll:false]"
msgstr ""

msgid ""
"Notice that depending on how you installed Erlang, Erlang binaries might not b"
"e available in your PATH. Be sure to have Erlang binaries in your [PATH](https"
"://en.wikipedia.org/wiki/Environment_variable), otherwise Elixir won't work!"
msgstr ""

msgid "## Setting PATH environment variable"
msgstr ""

msgid ""
"It is highly recommended to add Elixir's bin path to your PATH environment var"
"iable to ease development."
msgstr ""

msgid ""
"On **Windows**, there are [instructions for different versions](http://www.com"
"puterhope.com/issues/ch000549.htm) explaining the process."
msgstr ""

msgid ""
"On **Unix systems**, you need to [find your shell profile file](https://unix.s"
"tackexchange.com/a/117470/101951), and then add to the end of this file the fo"
"llowing line reflecting the path to your Elixir installation:"
msgstr ""

msgid ""
"```bash\n"
"export PATH=\"$PATH:/path/to/elixir/bin\"\n"
"```"
msgstr ""

msgid "## Checking the installed version of Elixir"
msgstr ""

msgid ""
"Once you have Elixir installed, you can check its version by running `elixir -"
"-version`."
msgstr ""
